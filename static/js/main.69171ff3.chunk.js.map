{"version":3,"sources":["images/cc_logo.png","components/Navigation.jsx","services/cryptoApi.js","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/CryptoNews.jsx","components/HomePage.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_useState","useState","_useState2","_slicedToArray","activeMenu","setActiveMenu","_useState3","_useState4","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","React","createElement","className","Avatar","src","icon","size","style","width","height","Typography","Title","level","Link","to","Button","onClick","MenuOutlined","Menu","theme","Item","HomeOutlined","key","FundOutlined","BulbOutlined","cryptoApiHeaders","X-RapidAPI-Key","X-RapidAPI-Host","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","concat","getCryptoDetails","coinId","getCryptoHistory","_ref","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Cryptocurrencies","simplified","_useGetCryptosQuery","cryptoList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","coins","filteredData","filter","coin","name","toLowerCase","includes","cryptoClass","Fragment","Input","placeholder","onChange","e","target","value","Row","gutters","Array","isArray","map","currency","Col","xs","sm","lg","uuid","Card","title","rank","extra","iconUrl","hoverable","Number","price","toFixed","millify","marketCap","change","cryptoNewsApiHeaders","X-BingApis-SDK","cryptoNewsApi","getCryptoNews","options","newsCategory","queryString","encodeURIComponent","useGetCryptoNewsQuery","demoImage","Text","Option","Select","CryptoNews","setNewsCategory","_useGetCryptoNewsQuer","cryptoNews","gutter","span","showSearch","optionFilterProp","filterOption","input","option","String","children","indexOf","news","i","href","rel","image","thumbnail","contentUrl","alt","description","substring","provider","moment","datePublished","startOf","fromNow","HomePage","globalStats","stats","Statistic","totalCoins","totalExchanges","totalMarkets","totalMarketCap","total24hVolume","LineChart","coinHistory","currentPrice","coinName","coinHistoryData","coinCurrentPrice","coinPrice","coinTimeStamp","coinHistData","history","n","length","push","Date","timestamp","toLocaleString","labels","datasets","label","fill","backgroundColor","borderColor","Line","scales","x","type","display","text","y","CryptoDetails","useParams","setTimePeriod","_useGetCryptoDetailsQ","cryptoDetails","console","log","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","MoneyCollectOutlined","supply","supplyAt","CheckOutlined","StopOutlined","ExclamationCircleOutlined","total","circulating","symbol","defaultValue","date","_ref2","HTMLReactParser","links","link","App","Layout","Routes","Route","exact","path","element","color","textAlign","Space","configureStore","reducer","_reducer","_defineProperty","middleware","getDefaultMiddleware","ReactDOM","createRoot","document","getElementById","render","Router","Provider","store"],"mappings":"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","file":"static/js/main.69171ff3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cc_logo.f0803f19.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { Avatar, Button, Menu, Typography } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  BulbOutlined,\r\n  FundOutlined ,\r\n  DeploymentUnitOutlined,\r\n  MenuOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nimport icon from \"../images/cc_logo.png\";\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(null);\r\n\r\n  useEffect(() => {\r\n      const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n      window.addEventListener('resize',handleResize);\r\n\r\n      handleResize();\r\n\r\n      return ()=> window.removeEventListener('resize',handleResize);\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n\r\n    if(screenSize <= 768)\r\n    {\r\n      setActiveMenu(false);\r\n    }\r\n    else{\r\n      setActiveMenu(true);\r\n    }\r\n\r\n  },[ screenSize ]);\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"default\" style={{width:'120px',height:'120px' }} />\r\n        <Typography.Title level={2} className=\"logo_title\">\r\n          <Link to=\"/\">Crypto Craze</Link>\r\n        </Typography.Title>\r\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}> <MenuOutlined/> </Button>\r\n      </div>\r\n\r\n      { activeMenu && (\r\n\r\n        <Menu theme=\"dark\" className=\"menu-bar\">\r\n          <Menu.Item icon={<HomeOutlined />} key='home'>\r\n            <Link to=\"/\">Home</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item icon={<FundOutlined />} key='cryptocurrencies'> \r\n            <Link to=\"/cryptocurrencies\">CryptoCurrencies</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item icon={<BulbOutlined/>} key='cryptonews'>\r\n            <Link to=\"/cryptonews\">CryptoNews</Link>\r\n          </Menu.Item>\r\n\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n    'X-RapidAPI-Key': '1dfeab7b7amsh07c7ca87ffb20efp15c295jsn836800360cfc',\r\n    'X-RapidAPI-Host': 'coinranking1.p.rapidapi.com'\r\n};\r\n\r\nconst baseUrl =  'https://coinranking1.p.rapidapi.com';\r\n\r\n// utility fn for merging baseUrl and headers\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`)\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`),\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history?referenceCurrencyUuid=yhjMzLPhuIDl&timePeriod=${timePeriod}`)\r\n        })\r\n    })\r\n});                                             \r\n\r\nexport const {\r\n    useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery\r\n} = cryptoApi;\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Row, Col, Input } from 'antd';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport './Cryptocurrencies.css';\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n\r\n    const count = simplified ? 10 : 100;\r\n    const { data: cryptoList, isFetching } = useGetCryptosQuery(count);\r\n    const [ cryptos, setCryptos ] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(()=>{\r\n        setCryptos(cryptoList && cryptoList.data ? cryptoList.data.coins: []);\r\n\r\n        const filteredData = cryptoList && cryptoList.data.coins ? cryptoList.data.coins.filter((coin)=> coin.name.toLowerCase().includes(searchTerm)):'';\r\n        setCryptos(filteredData)\r\n\r\n    }, [cryptoList, searchTerm])\r\n\r\n    if(isFetching)  \r\n        return 'Loading...'; \r\n\r\n    const cryptoClass = simplified? 'crypto-card-container': 'cryt-crd-container'; \r\n    \r\n  return (\r\n    <>\r\n        {!simplified && (\r\n            <div className='search-crypto'>\r\n                <Input \r\n                    placeholder='Search Cryptocurrency'\r\n                    onChange={(e) => setSearchTerm(e.target.value.toLowerCase())}\r\n                />\r\n            </div>\r\n        )}\r\n        <Row gutters={[52,52]} className={cryptoClass}>\r\n            {/* Checks whether we have loaded with the cryptos from api\r\n             and if that cryptos is array we can call map*/}\r\n\r\n            {Array.isArray(cryptos) && cryptos.map((currency) => (\r\n                <Col xs={24} sm={12} lg={6} className='crypto-card' key={currency.uuid}>\r\n                    <Link to={`/crypto/${currency.uuid}`} key={currency.uuid}>\r\n                        <Card \r\n                            title={`${currency.rank}. ${currency.name}`}\r\n                            extra={<img className='crypto-image' src={currency.iconUrl} /> }\r\n                            hoverable\r\n                        >\r\n                            <p>Price: ${Number(currency.price).toFixed(4)}</p>\r\n                            <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                            <p>Daily Change: {millify(currency.change)}%</p>\r\n                        </Card>\r\n                    </Link>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies\r\n\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsApiHeaders = {\r\n    'X-BingApis-SDK': 'true',\r\n    'X-RapidAPI-Key': '1dfeab7b7amsh07c7ca87ffb20efp15c295jsn836800360cfc',\r\n    'X-RapidAPI-Host': 'bing-news-search1.p.rapidapi.com'\r\n  };\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = ({ newsCategory, count }) => { \r\n    const queryString = `q=${encodeURIComponent(newsCategory)}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`;\r\n    return { url: `/news/search?${queryString}`, headers: cryptoNewsApiHeaders }\r\n};\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: (options) => createRequest(options),\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React, { useState } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\r\n\r\nimport './CryptoNews.css';\r\n\r\nconst demoImage = \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoNews = ({ simplified }) => {\r\n\r\n  const [newsCategory, setNewsCategory] = useState('CryptoCurrency');\r\n\r\n  const { data } = useGetCryptosQuery(100);\r\n\r\n  const count = simplified ? 6 : 15;\r\n  const { data: cryptoNews, isFetching } = useGetCryptoNewsQuery({\r\n    newsCategory,\r\n    count: count,\r\n  });\r\n\r\n  if(isFetching) return 'Loading...';\r\n\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className='select-news'\r\n            placeholder='Select a Crypto'\r\n            optionFilterProp='children'\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) => String(option.children).toLowerCase().indexOf(input.toLowerCase()) >= 0 }\r\n          >\r\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n            {data && data.data && data.data.coins && data.data.coins.map((coin) => (\r\n              <Option value={coin.uuid} key={coin.uuid}> \r\n                {coin.name}\r\n              </Option>\r\n              ))}\r\n          </Select>\r\n      </Col>\r\n      )}\r\n\r\n      {cryptoNews &&\r\n        cryptoNews.value.map((news, i) => (\r\n          <Col xs={24} sm={12} lg={8} key={i}>\r\n            <Card hoverable className=\"news-card\">\r\n              <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                <div className=\"news-image-container\">\r\n                  <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                  <img\r\n                    src={news && news.image && news.image.thumbnail && news.image.thumbnail.contentUrl\r\n                        ? news.image.thumbnail.contentUrl\r\n                        : demoImage\r\n                    }\r\n                    alt=\"news_image\"\r\n                  />\r\n                </div>\r\n                <p>\r\n                  {news.description > 100\r\n                    ? `${news.description.substring(0, 100)}...`\r\n                    : news.description}\r\n                </p>\r\n\r\n                <div className=\"provider-container\">\r\n                  <div>\r\n                  <Avatar \r\n                     src={\r\n                        news && news.provider && news.provider[0] && news.provider[0].image &&\r\n                        news.provider[0].image.thumbnail && news.provider[0].image.thumbnail.contentUrl\r\n                        ? news.provider[0].image.thumbnail.contentUrl\r\n                        : demoImage\r\n                     }\r\n                      alt=\"news\"\r\n                  />\r\n                  <Text className=\"provider-name\">{news.provider[0].name}</Text>\r\n                  </div>\r\n                  <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                </div>\r\n              </a>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CryptoNews;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Statistic, Typography } from \"antd\";\r\nimport millify from \"millify\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\n\r\nimport Cryptocurrencies from \"./Cryptocurrencies\";\r\nimport CryptoNews from \"./CryptoNews\";\r\nimport './HomePage.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst HomePage = () => {\r\n\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n\r\n  if(isFetching)\r\n  return 'Loading...';\r\n\r\n  const globalStats = data.data.stats;\r\n  /*\r\n  total: 29521\r\n  total24hVolume: \"34023215834\"\r\n  totalCoins: 29521\r\n  totalExchanges: 161\r\n  totalMarketCap: \"1052935777973\"\r\n  totalMarkets: 35512\r\n*/\r\n\r\n  return (\r\n    <main className=\"home-page-view\">\r\n\r\n      <section className=\"global-stats\">\r\n      <Title level={2} className=\"heading\">\r\n        Global Crypto Stats\r\n      </Title>\r\n      <Row gutter={[32, 32]}>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.totalCoins} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Market Cap:\" value={millify(globalStats.totalMarketCap)} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)} />\r\n        </Col>\r\n      </Row>\r\n\r\n      </section>\r\n\r\n\r\n      <section className=\"top-10-cryptos\">\r\n        \r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Top 10 Cryptos In the world\r\n        </Title>\r\n        <Title level={5} className=\"show-more\">\r\n          <Link to=\"/cryptocurrencies\">Show more</Link>\r\n        </Title>\r\n      </div>\r\n\r\n      <Cryptocurrencies simplified={true} />\r\n\r\n      </section>\r\n\r\n      <section className=\"top-news\">\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n        <Title level={5} className=\"show-more\"><Link to=\"/cryptonews\">Show more</Link></Title>\r\n      </div>\r\n      <CryptoNews simplified={true} />\r\n      </section>\r\n\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react'\r\nimport { Row, Col, Typography } from 'antd';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from 'chart.js/auto'\r\nimport { Chart } from 'react-chartjs-2'\r\n\r\nimport './LineChart.css';\r\n\r\nconst {Title} = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n\r\n    const coinHistoryData = coinHistory && coinHistory.data;\r\n    const coinCurrentPrice = Number(currentPrice).toFixed(3);\r\n\r\n    const coinPrice = [];\r\n    const coinTimeStamp = [];\r\n\r\n    const coinHistData = coinHistoryData && coinHistoryData.history;\r\n    const  n = coinHistData && coinHistData.length;\r\n\r\n    for(let i=0; i<n; i+=1)\r\n    {\r\n        coinPrice.push(coinHistData[i].price);\r\n        coinTimeStamp.push(new Date(coinHistData[i].timestamp).toLocaleString());\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimeStamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price in USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd',\r\n            }\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n          x: {\r\n            type: 'category', // Use 'category' scale for labels\r\n            title: {\r\n              display: true,\r\n              text: 'Time' // Add an appropriate x-axis title\r\n            }\r\n          },\r\n          y: {\r\n            type: 'linear', // Use 'linear' scale for numeric data\r\n            title: {\r\n              display: true,\r\n              text: 'Price in USD' // Add an appropriate y-axis title\r\n            }\r\n          }\r\n        },\r\n      };\r\n      \r\n      \r\n      \r\n  return (\r\n    <>\r\n        <Row className=\"chart-header\">\r\n            <Title level={2} className='chart-title'>{coinName} Price Chart</Title>\r\n            <Col className='price-container'>\r\n                <Title level={5} className='price-change'>Change: {coinHistoryData && coinHistoryData.change}%</Title>\r\n                <Title level={5} className='current-price'>Current {coinName} Price: {coinCurrentPrice}</Title>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Line data={data} options={options} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LineChart","import React, { useEffect, useState } from 'react'\r\nimport HTMLReactParser from 'html-react-parser'\r\nimport { useParams } from 'react-router-dom'\r\nimport millify from 'millify'\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport LineChart from './LineChart';\r\nimport './CryptoDetails.css';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState('24h');\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId: coinId, timePeriod: timePeriod})\r\n  const { data,  isFetching } = useGetCryptoDetailsQuery(coinId);\r\n\r\n  if(isFetching)    \r\n    return 'Loading...';\r\n\r\n  const cryptoDetails = data && data.data && data.data.coin;\r\n\r\n  console.log(coinHistory);\r\n\r\n\r\n\r\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  const stats = [\r\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `$ ${cryptoDetails[\"24hVolume\"] && millify(cryptoDetails[\"24hVolume\"])}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n  ];\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Aprroved Supply', value: cryptoDetails.supply.supplyAt ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.supply.total)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.supply.circulating)}`, icon: <ExclamationCircleOutlined /> },\r\n  ];\r\n  \r\n  return (\r\n    <Col className='coin-detail-container'>\r\n        <Col className='coin-heading-container'>\r\n            <Title level={2} className='coin-name'>{cryptoDetails.name} ({cryptoDetails.symbol})</Title>\r\n            <p>\r\n                {cryptoDetails.name} live price in US dollars.\r\n                View value statistics, market cap and supply.\r\n            </p>\r\n        </Col>\r\n\r\n        {/* Selecting the time period */}\r\n        <Select defaultValue='24h' className='select-timeperiod'\r\n            placeholder=\"Select Timeperiod\"\r\n            onChange={(value)=> setTimePeriod(value)}\r\n        >\r\n            {time.map((date) => (\r\n                <Option key={date}>{date}</Option>\r\n            ))}\r\n        </Select>\r\n\r\n        {/* Line Chart */}\r\n        <LineChart \r\n            coinHistory={coinHistory}\r\n            currentPrice = {(cryptoDetails && cryptoDetails.price)}\r\n            coinName = { cryptoDetails && cryptoDetails.name}\r\n        />\r\n\r\n        {/* Stats Container of the Coin */}\r\n\r\n        <Col className='stats-container'>\r\n            {/* Coin Stats */}\r\n            <Col className='coin-value-statistics'>\r\n                <Col className= 'coin-value-statistics-heading'>\r\n                    <Title level={3} className='coin-details-heading'>{cryptoDetails.name} Value Statistics</Title>\r\n                    <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n                </Col>\r\n\r\n                {stats.map( ({icon,title, value}) => (\r\n                     <Col className='coin-stats'>\r\n                        <Col className='coin-stats-name'>\r\n                            <Text>{icon}</Text>\r\n                            <Text>{title}</Text>\r\n                        </Col>\r\n                        <Text className='stats'>{value}</Text>\r\n                     </Col>\r\n                ))}\r\n            </Col>\r\n\r\n            {/* Other Stats */}\r\n            <Col className='other-stats-info'>\r\n                <Col className='coin-value-statistics-heading'>\r\n                    <Title level={3} className='coin-details-heading'>Other Stats Info</Title>\r\n                    <p>An overview showing the statistics of all the cryptocurrencies</p>\r\n                </Col>\r\n\r\n                {genericStats.map( ({icon, title, value})  => (\r\n                    <Col className='coin-stats'>\r\n                        <Col className='coin-stats-name'>\r\n                            <Text>{icon}</Text>\r\n                            <Text>{title}</Text>\r\n                        </Col>\r\n                        <Text className='stats'>{value}</Text>\r\n                    </Col>\r\n                ))}\r\n            </Col>\r\n        </Col>\r\n        \r\n        {/* Questions and Links */}\r\n        <Col className='coin-desc-link'>\r\n            <Row className='coin-desc'>\r\n                <Title level={3} className='coin-details-heading'>What is {cryptoDetails.name} ?</Title>\r\n                <p>{HTMLReactParser(cryptoDetails.description)}</p>\r\n            </Row>\r\n\r\n            <Col className='coin-links'>\r\n                <Title level={3} className='coin-details-heading'>\r\n                    {cryptoDetails.name} Links\r\n                </Title>\r\n                {cryptoDetails && cryptoDetails.links.map( (link)=> (\r\n                    <Row className='coin-link' key={link.name}>\r\n                        <Title level={5} className='link-name'>\r\n                            {link.type}\r\n                        </Title>\r\n                        <a href={link.url} target='_blank' rel='noreferrer'>{link.name}</a>\r\n                    </Row>\r\n                ))}\r\n            </Col>\r\n        </Col>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default CryptoDetails","import React from \"react\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Typography, Space } from \"antd\";\r\n\r\nimport Navigation from \"./components/Navigation\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport Cryptocurrencies from \"./components/Cryptocurrencies\";\r\n\r\nimport \"./App.css\";\r\nimport CryptoNews from \"./components/CryptoNews\";\r\nimport CryptoDetails from \"./components/CryptoDetails\";\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app\">\r\n        <div className=\"navbar\">\r\n          <Navigation />\r\n        </div>\r\n        <div className=\"main\">\r\n          <Layout>\r\n            <div className=\"routes\">\r\n              <Routes>\r\n                <Route exact path=\"/\" element={<HomePage />} />\r\n                <Route exact path=\"/cryptocurrencies\" element={<Cryptocurrencies simplified={false} />} />\r\n                <Route exact path=\"/cryptonews\" element={<CryptoNews simplified={false} />} />\r\n                <Route exact path=\"/crypto/:coinId\" element={<CryptoDetails/>} />\r\n              </Routes>\r\n            </div>\r\n          </Layout>\r\n          <div className=\"footer\">\r\n            <Typography.Title\r\n              level={5}\r\n              style={{ color: \"white\", textAlign: \"center\" }}\r\n            >\r\n              Copyright ©️ 2023\r\n              <Link to=\"/\">  Crypto Craze Inc.</Link>\r\n              <br />\r\n              All Rights Reserved\r\n            </Typography.Title>\r\n            <Space>\r\n              <Link to=\"/\">Home | </Link>\r\n              <Link to=\"/cryptocurrencies\">Cryptocurrencies |</Link>\r\n              <Link to=\"/cryptonews\">News</Link>\r\n            </Space>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(\r\n        cryptoApi.middleware,\r\n        cryptoNewsApi.middleware\r\n    ),\r\n});\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\n// import 'antd/dist/reset.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\nroot.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>\r\n);\r\n"],"sourceRoot":""}